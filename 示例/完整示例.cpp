
/*
 Name:		zui2.ino
 Created:	2018/9/3 23:04:12
 Author:	zanllp
*/
//复制到zui2.ino里面，我用的vs2017的visual micro有点bug只能这么做
#include "zui_lcd5110.h"
#include<avr/pgmspace.h>

/***********************************这些是图片****************************************************/

//在[]加progmem  让数据直接写入flash而不加载到ram
const char title[][160] PROGMEM = { {
		0x00, 0x00, 0xF8, 0x88, 0x88, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x88, 0x88, 0xF8, 0x00, 0x00, 0x00,
		0x10, 0x60, 0x02, 0xCC, 0x80, 0x80, 0xFC, 0x40, 0x20, 0xFF, 0x10, 0x08, 0xF8, 0x00, 0x00, 0x00,
		0x00, 0x08, 0x30, 0x00, 0xFF, 0x20, 0x20, 0x20, 0x20, 0xFF, 0x20, 0x20, 0x22, 0x2C, 0x20, 0x00,
		0x00, 0x04, 0x84, 0x84, 0x44, 0x24, 0x54, 0x8F, 0x14, 0x24, 0x44, 0x84, 0x84, 0x04, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x1F, 0x08, 0x08, 0x08, 0x08, 0x7F, 0x88, 0x88, 0x88, 0x88, 0x9F, 0x80, 0xF0, 0x00,
		0x04, 0x04, 0x7E, 0x01, 0x00, 0x00, 0x3F, 0x40, 0x40, 0x4F, 0x40, 0x44, 0x47, 0x40, 0x78, 0x00,
		0x04, 0x04, 0x02, 0x01, 0xFF, 0x80, 0x40, 0x30, 0x0E, 0x01, 0x06, 0x18, 0x20, 0x40, 0x80, 0x00,
		0x41, 0x39, 0x00, 0x00, 0x3C, 0x40, 0x40, 0x42, 0x4C, 0x40, 0x40, 0x70, 0x04, 0x09, 0x31, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

	} ,{
		0x00, 0x3E, 0x22, 0xE2, 0x22, 0x3E, 0x00, 0x10, 0x88, 0x57, 0x24, 0x54, 0x8C, 0x00, 0x00, 0x00,
		0x20, 0x30, 0xAC, 0x63, 0x20, 0x18, 0x80, 0x90, 0x90, 0xFF, 0x90, 0x49, 0x4A, 0x48, 0x40, 0x00,
		0x80, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x80, 0xFE, 0x02, 0x02, 0xF2, 0x02, 0x02, 0xFE, 0x00, 0x00,
		0x20, 0x20, 0x20, 0xFF, 0x20, 0x22, 0x14, 0x90, 0x10, 0x00, 0xF8, 0x00, 0x00, 0xFF, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x7E, 0x40, 0x3F, 0x22, 0x22, 0x00, 0x01, 0xFE, 0x42, 0x42, 0x42, 0xFE, 0x01, 0x01, 0x00,
		0x22, 0x67, 0x22, 0x12, 0x12, 0x12, 0x40, 0x40, 0x20, 0x13, 0x0C, 0x14, 0x22, 0x41, 0xF8, 0x00,
		0x40, 0x20, 0x18, 0x07, 0x08, 0xB0, 0x40, 0x23, 0x18, 0x06, 0x01, 0x7E, 0x80, 0x83, 0xE0, 0x00,
		0x40, 0x40, 0x20, 0x13, 0x0C, 0x14, 0x22, 0x41, 0xF8, 0x00, 0x0F, 0x40, 0x80, 0x7F, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,


	} , {
		0x40, 0x40, 0x42, 0xCC, 0x00, 0x00, 0x4A, 0x32, 0x22, 0x2A, 0xF1, 0x21, 0x31, 0x2D, 0x00, 0x00,
		0x10, 0x10, 0x10, 0xFF, 0x90, 0x20, 0x98, 0x48, 0x28, 0x09, 0x0E, 0x28, 0x48, 0xA8, 0x18, 0x00,
		0x80, 0x80, 0x9E, 0x92, 0x92, 0x92, 0x9E, 0xE0, 0x80, 0x9E, 0xB2, 0xD2, 0x92, 0x9E, 0x80, 0x00,
		0x40, 0x40, 0x42, 0xCC, 0x00, 0x40, 0xA0, 0x9E, 0x82, 0x82, 0x82, 0x9E, 0xA0, 0x20, 0x20, 0x00,
		0x00, 0x17, 0x15, 0xD5, 0x55, 0x57, 0x55, 0x7D, 0x55, 0x57, 0x55, 0xD5, 0x15, 0x17, 0x00, 0x00,
		0x00, 0x80, 0x40, 0x3F, 0x40, 0x80, 0x81, 0xBD, 0xA1, 0xA1, 0xBF, 0xA1, 0xA1, 0xBD, 0x81, 0x00,
		0x02, 0x42, 0x81, 0x7F, 0x00, 0x40, 0x40, 0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x40, 0x00,
		0x08, 0x08, 0xF4, 0x94, 0x92, 0x92, 0xF1, 0x00, 0x01, 0xF2, 0x92, 0x94, 0x94, 0xF8, 0x08, 0x00,
		0x00, 0x00, 0x00, 0x3F, 0x90, 0x88, 0x40, 0x43, 0x2C, 0x10, 0x28, 0x46, 0x41, 0x80, 0x80, 0x00,
		0x40, 0x40, 0x40, 0x7F, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x7F, 0x40, 0x40, 0x40, 0x00,

	},{
		0x00, 0x00, 0xF8, 0x88, 0x88, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x88, 0x88, 0xF8, 0x00, 0x00, 0x00,
		0x10, 0x10, 0xD0, 0xFF, 0x90, 0x10, 0x00, 0xFE, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xE0, 0x9F, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x08, 0x00, 0x00,
		0x00, 0x00, 0xF8, 0x88, 0x88, 0x88, 0x88, 0xFF, 0x88, 0x88, 0x88, 0x88, 0xF8, 0x00, 0x00, 0x00,
		0x40, 0x42, 0xCC, 0x00, 0x00, 0xFE, 0x82, 0x92, 0x92, 0xFE, 0x92, 0x92, 0x82, 0xFE, 0x00, 0x00,
		0x00, 0x00, 0x1F, 0x08, 0x08, 0x08, 0x08, 0x7F, 0x88, 0x88, 0x88, 0x88, 0x9F, 0x80, 0xF0, 0x00,
		0x04, 0x03, 0x00, 0xFF, 0x00, 0x83, 0x60, 0x1F, 0x00, 0x00, 0x00, 0x3F, 0x40, 0x40, 0x78, 0x00,
		0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x48, 0x80, 0x40, 0x3F, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x1F, 0x08, 0x08, 0x08, 0x08, 0x7F, 0x88, 0x88, 0x88, 0x88, 0x9F, 0x80, 0xF0, 0x00,
		0x00, 0x00, 0x3F, 0x10, 0x88, 0x7F, 0x00, 0x1E, 0x12, 0x12, 0x12, 0x5E, 0x80, 0x7F, 0x00, 0x00,
	} ,{
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xFE, 0x40, 0xA0, 0x10, 0x08, 0x00, 0x00,
		0x10, 0x10, 0x10, 0xFF, 0x90, 0x20, 0x98, 0x48, 0x28, 0x09, 0x0E, 0x28, 0x48, 0xA8, 0x18, 0x00,
		0x40, 0x40, 0x42, 0xCC, 0x00, 0x40, 0xA0, 0x9E, 0x82, 0x82, 0x82, 0x9E, 0xA0, 0x20, 0x20, 0x00,
		0x00, 0x17, 0x15, 0xD5, 0x55, 0x57, 0x55, 0x7D, 0x55, 0x57, 0x55, 0xD5, 0x15, 0x17, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0C, 0x10, 0x21, 0x42, 0xF0, 0x00,
		0x02, 0x42, 0x81, 0x7F, 0x00, 0x40, 0x40, 0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x3F, 0x90, 0x88, 0x40, 0x43, 0x2C, 0x10, 0x28, 0x46, 0x41, 0x80, 0x80, 0x00,
		0x40, 0x40, 0x40, 0x7F, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x7F, 0x40, 0x40, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

	} ,{
		0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0xFE, 0x02, 0x02, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xBE, 0x2A, 0x2A, 0x2A, 0xEA, 0x2A, 0x2A, 0x2A, 0x3E, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x08, 0x30, 0x00, 0xFF, 0x20, 0x20, 0x20, 0x20, 0xFF, 0x20, 0x20, 0x22, 0x2C, 0x20, 0x00,
		0x00, 0x04, 0x84, 0x84, 0x44, 0x24, 0x54, 0x8F, 0x14, 0x24, 0x44, 0x84, 0x84, 0x04, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7F, 0x40, 0x40, 0x40, 0x41, 0x42, 0x41, 0x40, 0x40, 0x00,
		0x00, 0x44, 0x42, 0x49, 0x49, 0x49, 0x49, 0x7F, 0x49, 0x49, 0x49, 0x49, 0x41, 0x40, 0x00, 0x00,
		0x04, 0x04, 0x02, 0x01, 0xFF, 0x80, 0x40, 0x30, 0x0E, 0x01, 0x06, 0x18, 0x20, 0x40, 0x80, 0x00,
		0x41, 0x39, 0x00, 0x00, 0x3C, 0x40, 0x40, 0x42, 0x4C, 0x40, 0x40, 0x70, 0x04, 0x09, 0x31, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	} ,
};
const char icon[][128]PROGMEM = {
	/***********************电池***********************/
	{ 0x00, 0xE0, 0x20, 0xA0, 0xA0, 0xA0, 0x20, 0xA0, 0xA0, 0xA0, 0x20, 0xA0, 0xA0, 0xA0, 0xA0, 0x20,
	0xA0, 0xA0, 0xA0, 0x20, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
	0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x3C, 0x3C, 0x00,
	0x00, 0x07, 0x04, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x04,
	0x05, 0x05, 0x05, 0x04, 0x07, 0x00, 0x00, 0x00,
	},
	/*******************路线规划*************************/
	{ 0xFF, 0x21, 0x21, 0x21, 0x21, 0xA1, 0xFF, 0xA1, 0x21, 0x21, 0x21, 0xFF, 0x21, 0x21, 0x21, 0x21,
	0x21, 0xFF, 0x21, 0x21, 0x21, 0x21, 0x21, 0xFE, 0xFF, 0x24, 0x3C, 0x0A, 0x09, 0x08, 0xFF, 0x08,
	0x09, 0x0A, 0x0C, 0xFF, 0x18, 0x28, 0x48, 0x88, 0x48, 0xFF, 0x48, 0x88, 0x08, 0x88, 0x88, 0xFF,
	0x7F, 0x82, 0x82, 0x82, 0x82, 0x82, 0xFF, 0x82, 0x82, 0x82, 0x82, 0x7F, 0x82, 0x82, 0x82, 0x82,
	0x82, 0x7F, 0x82, 0x82, 0x83, 0x87, 0x84, 0xFF,
	},
	/***********************遥控器**********************/
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x40, 0xC0, 0xC0, 0xFF, 0xFF, 0xC1, 0xC1, 0x41,
	0x81, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x3E, 0xDE, 0x2E, 0x2E, 0x32,
	0xDE, 0xFF, 0xFF, 0xDF, 0xFF, 0x7F, 0x3F, 0xDE, 0x22, 0xAE, 0x22, 0xDE, 0x3C, 0xF0, 0x00, 0x00,
	0x00, 0x00, 0x3F, 0x7F, 0xDD, 0xCD, 0x9D, 0xFD, 0x8E, 0x8F, 0x8F, 0x8A, 0x8B, 0x8F, 0x8F, 0xFE,
	0xFD, 0xDD, 0xCD, 0xFE, 0x7F, 0x0F, 0x00, 0x00,
	},
	/*******************电机与电调***********************/
	{ 0xFF, 0xCF, 0xC7, 0xC7, 0xC3, 0x83, 0x83, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF,
	0x7F, 0x3F, 0x01, 0x03, 0x07, 0x0F, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07,
	0x86, 0xC4, 0xE0, 0x00, 0x01, 0x13, 0x31, 0x70, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0xFF, 0xFF,
	0xFF, 0xF8, 0xF0, 0xE0, 0xC0, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF0, 0xE0, 0xE0, 0xC0,
	0xC0, 0xC1, 0xC1, 0xE3, 0xE3, 0xF3, 0xFB, 0xFF,
	},
	/********************飞控****************************/
	{ 0x00, 0x00, 0x00, 0x20, 0x60, 0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0,
	0xE0, 0xF0, 0xF8, 0x7C, 0x3C, 0x1E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1,
	0xE1, 0xF3, 0xFF, 0x7F, 0x3F, 0x3F, 0x7F, 0xFF, 0xFF, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x03, 0x03, 0x03, 0x1B, 0x1E, 0x0F, 0xFF, 0xF7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x07, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
	},
	/******************卫星***********************/
	{ 0x08, 0x1C, 0x3E, 0x7F, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0x80, 0x80, 0xE0, 0xE0, 0xC0, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xC8, 0x88, 0x09, 0x1D,
	0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xCF, 0xC6, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x06, 0x0C, 0x08, 0x08, 0x0F, 0x00, 0x00, 0x03, 0x07,
	0x0F, 0x1F, 0x3F, 0x7F, 0x7F, 0x7E, 0x3C, 0x18
	}
};
const char vs[]PROGMEM = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF,
0x07, 0x03, 0x03, 0xF1, 0xF3, 0xE3, 0xC7, 0x8F, 0x1F, 0x1F, 0x1F, 0x0F, 0x07, 0x83, 0xC1, 0xC0,
0xE0, 0xF0, 0xF8, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0,
0xC0, 0xCF, 0xCF, 0xE7, 0xF3, 0xF1, 0xF8, 0xFC, 0xF8, 0xF8, 0xF0, 0xE0, 0xC1, 0x83, 0x07, 0x07,
0x0F, 0x1F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF3, 0xEF, 0xF3,
0xFC, 0xFF, 0xFF, 0xE9, 0xEA, 0xEA, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8,
0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF,
};//visual studio
const char acfun[]PROGMEM = { 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x90, 0xC8, 0xE0, 0xE4, 0xE4, 0xC4, 0x04, 0x04, 0x04,
0x08, 0x18, 0x30, 0xD0, 0x08, 0x08, 0x04, 0x04, 0x00, 0x02, 0x02, 0x02, 0x00, 0x00, 0x01, 0x00,
0x00, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x0E, 0x08, 0x11, 0x21, 0x41, 0xFC, 0xFE, 0xFE, 0x06,
0x0C, 0x18, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFC, 0x3E, 0x3F, 0x7B,
0x78, 0x78, 0x7B, 0x7F, 0x7F, 0xF8, 0xE0, 0xC0, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xF0, 0xC0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x80, 0x00, 0x0C,
0xF0, 0xC0, 0x00, 0x00, 0x01, 0x03, 0x0E, 0xFC, 0x5C, 0x3C, 0x0F, 0x00, 0x00, 0x00, 0x80, 0x40,
0x40, 0x40, 0x40, 0x23, 0x26, 0xAC, 0xF8, 0xF8, 0x30, 0xF0, 0xF0, 0x90, 0x71, 0xFB, 0x0F, 0x07,
0x01, 0x41, 0x00, 0x80, 0x70, 0x30, 0x3C, 0x1B, 0x88, 0x87, 0x81, 0x81, 0x06, 0x10, 0xFF, 0x00,
0x20, 0x10, 0x0C, 0x03, 0x0B, 0xCC, 0xF0, 0xC7, 0x41, 0x8E, 0xF0, 0x00, 0x00, 0x00, 0xC1, 0x7E,
0x08, 0x20, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x3C, 0xCC, 0x06, 0x83, 0x81, 0x60, 0x18,
0x07, 0x1F, 0x74, 0xB9, 0x13, 0x5C, 0x10, 0x08, 0x04, 0x12, 0x60, 0xC0, 0x4C, 0x2E, 0x3F, 0x1F,
0x7F, 0x7D, 0x39, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x17, 0x5E, 0x6E,
0x60, 0x67, 0x10, 0x1E, 0x1E, 0x1F, 0x07, 0x0C, 0x10, 0x00, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x18, 0x06, 0x03, 0x00, 0x00, 0x80, 0x60, 0x21,
0x22, 0x12, 0x14, 0x12, 0xF8, 0x01, 0x23, 0x23, 0x03, 0x41, 0xC0, 0xC0, 0xC0, 0xD0, 0x20, 0x60,
0x66, 0xA2, 0x20, 0x10, 0x10, 0x08, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x40, 0x40,
0x40, 0x40, 0x40, 0x58, 0x27, 0xE0, 0xE0, 0x90, 0x80, 0x88, 0x84, 0x81, 0x80, 0x80, 0x80, 0x80,
0x80, 0x84, 0x98, 0xF0, 0xF8, 0xA0, 0x80, 0x82, 0xE7, 0x18, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};//ACFUN55X48
const char arduino[]PROGMEM = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0x7F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F,
0x3F, 0x7F, 0xFF, 0xFE, 0xFC, 0xF8, 0xF8, 0xE0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0x7F, 0x3F,
0x3F, 0x1F, 0x9F, 0x9F, 0x9F, 0x9F, 0x1F, 0x1F, 0x3F, 0x7F, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0x80, 0x00, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E,
0x1E, 0x80, 0xC0, 0xE1, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xC0, 0x80, 0x1E,
0x1E, 0x1E, 0x7F, 0x7F, 0x7F, 0x7F, 0x1E, 0x1E, 0x00, 0x80, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x00, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E,
0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x07, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x7F,
0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01,
0x00, 0xF8, 0xFC, 0xCE, 0xCE, 0xFC, 0xF8, 0x00, 0xFC, 0xFE, 0x66, 0xFE, 0xDC, 0x00, 0xFE, 0xFE,
0x86, 0x86, 0xFE, 0xFC, 0x00, 0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xFE, 0x00, 0x86, 0x86, 0xFE, 0xFE,
0x86, 0x86, 0x00, 0xFE, 0xFC, 0x38, 0x70, 0xFE, 0xFE, 0x00, 0x78, 0xFC, 0x86, 0x86, 0xFC, 0x78,
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01,
0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00
,
};//arduino图标48x48*/
const char kmh[]PROGMEM = { 0x1F, 0x04, 0x1A, 0x00, 0x1E, 0x02, 0x1C, 0x02, 0x1E, 0x00, 0xF8, 0x20, 0xE0, }; //km/h
const char ssd[]PROGMEM = { 0x02, 0x05, 0x72, 0x88, 0x88, 0x88, }; //摄氏度
const char wd[10]PROGMEM = { 0x01, 0x01, 0x7F, 0x01, 0x39, 0x54, 0x48, 0x00, 0x6C, 0x6C, };//温度
const char arrow[2][16]PROGMEM = { { 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00, }
};
/*************************************************************************************************/

boolean ch5;
int ch6 = analogRead(A2);
boolean ch7;//第七通道
boolean ch8;
double recv = 11.1;//接收机电压初始值11.1v
int speed;//速度
double heigDraw;//高度
unsigned int wxsl;//卫星数量
double temp = 28.0;//温度
int afcs;//飞控状态
double jgdy = 3.6; //报警电压
int pwm = 920;
unsigned time_temp;
static boolean arrow_state;


/*************************************************************/

//                         页面
/*************************************************************/
/***************************UI页面切换*******************************/
void UI()//页面数量
{

	if (ui.GetPage() == 0 && (ui.PS2VRXDown() || ui.PS2VRXUp()))
	{
		ui.ToPage(1);//在菜单页时活动横向摇杆回到菜单页
	}
	if (ui.GetPage() == 1 && (ui.PS2VRYDown() || ui.PS2VRYUp()))
	{
		ui.ToPage(0);//在主页时活动横向摇杆进入主页
	}
	/***************根据页面编号进行切换****************/
	switch (ui.GetPage())//页面切换，分配页面编号
	{
	case 0:
		home();//主页
		break;
	case 1:
		menu();//菜单
		break;
	case 2:
		battery();//电池
		break;
	case 4:
		range();//行程
		break;
	case 5:
		fan();//行程
		break;
	default://默认相当于没分配页面编号
		ui.SetPage(0);//必须指出home的页面编号为0，不然出现home键
		home();//主页
		break;
	}
}

/*********************************主页***********************************/
void home()
{
	/***********第一行**************/
	ui.Text(0, 0, "CH5:", 0);
	if (ch5 == 1)
	{
		ui.Text(22, 0, "ON", 0);
	}
	else
	{
		ui.Text(22, 0, "OFF", 0);
	}
	ui.Text(44, 0, "CH6:", 0);
	ui.Var(66, 0, map(analogRead(A2), 0, 1023, 0, 999), 3, 0);//螺距，给飞手判断电位器是否回中
	 /***********第二行**************/
	ui.Text(0, 1, "CH7:", 0);
	if (ui.Click(0)) //光标移动到第0个并按下时，"ON""OFF"交换
	{
		ch7 = !ch7;
	}
	if (ch7 == 0)
	{
		ui.ButtonText(22, 1, "OFF");
	}
	else
	{
		ui.ButtonText(22, 1, "ON");
	}
	ui.Text(44, 1, "CH8:", 0);
	if (ui.Click(1))
	{
		ch8 = !ch8;
	}
	if (ch8 == 0)
	{
		ui.ButtonText(66, 1, "OFF");
	}
	else
	{
		ui.ButtonText(66, 1, "ON");
	}
	/***********第三行**************/
	ui.Text(0, 2, "T:", 0);
	ui.Var(11, 2, analogRead(A7) / 206.4, 3, 1);//xy(13,2),读取A7的模拟值除于206.4（若除于一个整数返回值也是一个整数），3位有效数字，浮点数
	ui.Text(32, 2, "v", 0);
	ui.Text(44, 2, "R:", 0);
	ui.Var(55, 2, recv, 3, 1);
	ui.Text(76, 2, "v", 0);
	/***********第四行**************/
	ui.Text(0, 3, "V;", 0);
	ui.Var(11, 3, speed, 3, 0);//(11,3),speed,3位有效数字，整数
	ui.Draw(30, 3, 13, 8, kmh);//调用长度为13宽度为8的图像kmh到(30，3）
	ui.Text(44, 3, "H:", 0);
	ui.Var(55, 3, heigDraw, 3, 0);
	ui.Text(76, 3, "m", 0);
	/***********第五行**************/
	ui.Text(0, 4, "GPS:", 0);
	if (wxsl == 0)
	{
		ui.Text(22, 4, "err", 0);
	}
	else
	{
		ui.Var(22, 4, wxsl, 2, 0);
	}
	ui.Draw(44, 4, 10, 8, wd);
	ui.Var(55, 4, temp, 3, 1);
	ui.Draw(76, 4, 6, 8, ssd);
	/***********第六行**************/
	ui.Text(0, 5, "AFCS:", 0);//飞控模式切换
	if (ui.Click(2))
	{
		afcs++;
		if (afcs > 2)
		{
			afcs = 0;
		}
	}
	switch (afcs)//afcs飞控状态
	{
	case 0:
		ui.ButtonText(38, 5, "Manual");//当飞控状态为0时手动控制
		break;
	case 1:
		ui.ButtonText(38, 5, "SAS");//增稳系统
		break;
	case 2:
		ui.ButtonText(38, 5, "Auto");//自动控制
		break;
	default:
		break;
	}
	ui.ReverseDisplayEnd();//页面结束,当前页面使用反显,使用纵向电位器对面光标进行控制,必须放在页面末尾
}
/*****************************选项页******************************/
void menu()//滑动选项页，页面编号为1
{
	//这个自定义页面比较复杂，不会写用button+end()也够了
	ui.SetCursorNum(6);//设置光标数量
	if (ui.PS2VRXDown())
	{
		ui.SetCursor(ui.GetCursor() + 1);//当前光标+1
		if (ui.GetCursor() > ui.GetCursorNum() - 1)//超出界限
		{
			ui.SetCursor(0);
		}
		ui.Clear();
	}
	if (ui.PS2VRXUp())
	{
		ui.SetCursor(ui.GetCursor() - 1);
		if (ui.GetCursor() < 0)//超出界限
		{
			ui.SetCursor(ui.GetCursorNum() - 1);
		}
		ui.Clear();
	}
	if (ui.GetCursor() > 0 && ui.GetCursor() < (ui.GetCursorNum() - 1))
	{
		ui.Draw(0, 2, 24, 24, icon[ui.GetCursor() - 1]);
		ui.Draw(30, 2, 24, 24, icon[ui.GetCursor()]);
		ui.Draw(59, 2, 24, 24, icon[ui.GetCursor() + 1]);
	}

	if (ui.GetCursor() == 0)
	{
		ui.Draw(0, 2, 24, 24, icon[ui.GetCursorNum() - 1]);
		ui.Draw(30, 2, 24, 24, icon[ui.GetCursor()]);
		ui.Draw(59, 2, 24, 24, icon[ui.GetCursor() + 1]);
	}
	if (ui.GetCursor() == ui.GetCursorNum() - 1)
	{
		ui.Draw(0, 2, 24, 24, icon[ui.GetCursorNum() - 2]);
		ui.Draw(30, 2, 24, 24, icon[ui.GetCursor()]);
		ui.Draw(59, 2, 24, 24, icon[0]);

	}
	ui.Draw(0, 0, 80, 16, title[ui.GetCursor()]); //菜单标题文件必须一一对应图标文件
	if (millis() - time_temp > 1000) //每隔1000ms更换一次
	{
		ui.Draw(33, 5, 16, 8, arrow[arrow_state]);
		arrow_state = !arrow_state;
		time_temp = millis();
	}
	for (int i = 0; i < 6; i++)
	{
		if (ui.Click(i))
		{
			ui.ToPage(ui.GetCursor() + 2); //0是主页,1是滑动选项页,so+2
			break;
		}
	}


}
/*****************************行程页********************************/
void range(void)//电位器行程，页面编号为4
{

	ui.ButtonVar(0, 1, analogRead(A4), 4, 0); //副翼
	ui.ButtonVar(40, 1, analogRead(A5), 4, 0);//油门
	ui.ButtonVar(0, 2, analogRead(A6), 4, 0);//偏航
	ui.ButtonVar(40, 2, analogRead(A3), 4, 0);//俯仰
	ui.ButtonVar(0, 3, analogRead(A2), 4, 0);//螺距
	ui.Var(0, 4, digitalRead(10), 1, 0);//
	ui.Var(30, 4, digitalRead(2), 1, 0);//左
	ui.Var(40, 4, analogRead(A6), 1, 0);//右
	ui.Var(50, 4, digitalRead(A4), 1, 0);//上
	ui.Var(60, 4, digitalRead(A5), 1, 0);//下
	ui.ButtonVar(60, 0, jgdy, 2, 1);
	if (ui.Click(5))//当光标位置为5，按键按下时
	{
		ui.MsgBox(jgdy, 2, 1, 0.1);//返回修改的数据,打开对话框修改数据（被修改的数据，有效数位，整数/浮点，每50ms步进程度）
	}
	ui.ArrowEnd();//当前页面使用光标,使用纵向电位器对面光标进行控制,必须放在页面末尾
}
/********************************电池状态页******************************/
void battery()//页面编号为2
{
	//最低电压警告设置
	ui.Text(0, 0, "T:", 0);
	ui.Var(11, 0, analogRead(A7) / 206.4, 2, 1);//xy(13,2),读取A7的模拟值除于206.4（若除于一个整数返回值也是一个整数），3位有效数字，浮点数
	ui.Text(30, 0, "v", 0);
	ui.Text(0, 1, "low limit:", 0);
	ui.ButtonVar(58, 1, jgdy, 2, 1);
	if (ui.Click(0))//当光标位置为0，按键按下时
	{
		ui.MsgBox(jgdy, 2, 1, 0.1);//返回修改的数据,打开对话框修改数据（被修改的数据，有效数位，整数/浮点，电位器活动时每50ms0.1）
	}
	ui.Text(78, 1, "v", 0);
	/*******************/
	ui.Text(0, 3, "R:", 0);
	ui.Var(11, 3, recv, 3, 1);
	ui.Text(35, 3, "v", 0);
	ui.Text(0, 4, "low limit:", 0);
	ui.ButtonVar(58, 4, recv, 3, 1);
	if (ui.Click(1))//当光标位置为0，按键按下时
	{
		ui.MsgBox(recv, 3, 1, 0.5); //返回修改的数据,打开对话框修改数据（被修改的数据，有效数位，整数/浮点，电位器活动时每50ms0.5）
	}
	ui.Text(78, 4, "v", 0);
	ui.ReverseDisplayEnd();//页面结束当前页面使用反显

}
void fan()
{
	ui.ButtonVar(0, 2, pwm, 4, 0);
	if (ui.Click(0))
	{
		ui.MsgBox(pwm, 4, 0, 50);
	}
	ui.ReverseDisplayEnd();
}
/*************************开机界面*****************************/
void kjjm(int time)
{
	ui.Draw(1, 0, 48, 48, arduino);
	ui.Draw(53, 1, 30, 32, vs);
	delay(time / 2);
	ui.Clear();
	ui.Draw(15, 0, 55, 48, acfun);
	delay(time / 2);
	ui.Clear();
}
void setup()
{
	ui.SetLcd(6, 7, 5, 4, 3);//rst,ce,dc,din,clk
	ui.SetPS2(12, A1, A0);//用于控制界面的ps2摇杆的按键，纵向选项电位器针脚，横向选项电位器针脚
	kjjm(1000);//开机界面,持续时间1000ms
	Serial.begin(9600);
}

void loop()
{
	UI();//启动界面
}
